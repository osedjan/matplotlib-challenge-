{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Observations and Insights"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Dependencies and starter code"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Mouse ID</th>\n",
       "      <th>Drug Regimen</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age_months</th>\n",
       "      <th>Weight (g)</th>\n",
       "      <th>Timepoint</th>\n",
       "      <th>Tumor Volume (mm3)</th>\n",
       "      <th>Metastatic Sites</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>k403</td>\n",
       "      <td>Ramicane</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "      <td>45.000000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>k403</td>\n",
       "      <td>Ramicane</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>16</td>\n",
       "      <td>5</td>\n",
       "      <td>38.825898</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>k403</td>\n",
       "      <td>Ramicane</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>16</td>\n",
       "      <td>10</td>\n",
       "      <td>35.014271</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>k403</td>\n",
       "      <td>Ramicane</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>16</td>\n",
       "      <td>15</td>\n",
       "      <td>34.223992</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>k403</td>\n",
       "      <td>Ramicane</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>16</td>\n",
       "      <td>20</td>\n",
       "      <td>32.997729</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1888</td>\n",
       "      <td>z969</td>\n",
       "      <td>Naftisol</td>\n",
       "      <td>Male</td>\n",
       "      <td>9</td>\n",
       "      <td>30</td>\n",
       "      <td>25</td>\n",
       "      <td>63.145652</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1889</td>\n",
       "      <td>z969</td>\n",
       "      <td>Naftisol</td>\n",
       "      <td>Male</td>\n",
       "      <td>9</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>65.841013</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1890</td>\n",
       "      <td>z969</td>\n",
       "      <td>Naftisol</td>\n",
       "      <td>Male</td>\n",
       "      <td>9</td>\n",
       "      <td>30</td>\n",
       "      <td>35</td>\n",
       "      <td>69.176246</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1891</td>\n",
       "      <td>z969</td>\n",
       "      <td>Naftisol</td>\n",
       "      <td>Male</td>\n",
       "      <td>9</td>\n",
       "      <td>30</td>\n",
       "      <td>40</td>\n",
       "      <td>70.314904</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1892</td>\n",
       "      <td>z969</td>\n",
       "      <td>Naftisol</td>\n",
       "      <td>Male</td>\n",
       "      <td>9</td>\n",
       "      <td>30</td>\n",
       "      <td>45</td>\n",
       "      <td>73.867845</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1893 rows Ã— 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Mouse ID Drug Regimen   Sex  Age_months  Weight (g)  Timepoint  \\\n",
       "0        k403     Ramicane  Male          21          16          0   \n",
       "1        k403     Ramicane  Male          21          16          5   \n",
       "2        k403     Ramicane  Male          21          16         10   \n",
       "3        k403     Ramicane  Male          21          16         15   \n",
       "4        k403     Ramicane  Male          21          16         20   \n",
       "...       ...          ...   ...         ...         ...        ...   \n",
       "1888     z969     Naftisol  Male           9          30         25   \n",
       "1889     z969     Naftisol  Male           9          30         30   \n",
       "1890     z969     Naftisol  Male           9          30         35   \n",
       "1891     z969     Naftisol  Male           9          30         40   \n",
       "1892     z969     Naftisol  Male           9          30         45   \n",
       "\n",
       "      Tumor Volume (mm3)  Metastatic Sites  \n",
       "0              45.000000                 0  \n",
       "1              38.825898                 0  \n",
       "2              35.014271                 1  \n",
       "3              34.223992                 1  \n",
       "4              32.997729                 1  \n",
       "...                  ...               ...  \n",
       "1888           63.145652                 2  \n",
       "1889           65.841013                 3  \n",
       "1890           69.176246                 4  \n",
       "1891           70.314904                 4  \n",
       "1892           73.867845                 4  \n",
       "\n",
       "[1893 rows x 8 columns]"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Dependencies and Setup\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import scipy.stats as st\n",
    "\n",
    "# Study data files\n",
    "mouse_metadata = \"data/Mouse_metadata.csv\"\n",
    "study_results = \"data/Study_results.csv\"\n",
    "\n",
    "# Read the mouse data and the study results\n",
    "mouse_metadata = pd.read_csv(mouse_metadata)\n",
    "study_results = pd.read_csv(study_results)\n",
    "\n",
    "# Combine the data into a single dataset\n",
    "mouse_study = pd.merge(mouse_metadata, study_results)\n",
    "mouse_study"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Mouse ID</th>\n",
       "      <th>Drug Regimen</th>\n",
       "      <th>Tumor Volume</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>k403</td>\n",
       "      <td>Ramicane</td>\n",
       "      <td>45.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>k403</td>\n",
       "      <td>Ramicane</td>\n",
       "      <td>38.825898</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>k403</td>\n",
       "      <td>Ramicane</td>\n",
       "      <td>35.014271</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>k403</td>\n",
       "      <td>Ramicane</td>\n",
       "      <td>34.223992</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>k403</td>\n",
       "      <td>Ramicane</td>\n",
       "      <td>32.997729</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Mouse ID Drug Regimen  Tumor Volume\n",
       "0     k403     Ramicane     45.000000\n",
       "1     k403     Ramicane     38.825898\n",
       "2     k403     Ramicane     35.014271\n",
       "3     k403     Ramicane     34.223992\n",
       "4     k403     Ramicane     32.997729"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Split up data into groups based on 'Drug Regimen'\n",
    "DrugReg = mouse_study[\"Drug Regimen\"]\n",
    "MouseId = mouse_study[\"Mouse ID\"]\n",
    "TumorVol = mouse_study[\"Tumor Volume (mm3)\"]\n",
    "reduced_mouse = pd.DataFrame({\"Mouse ID\":MouseId, \"Drug Regimen\":DrugReg, \"Tumor Volume\":TumorVol})\n",
    "reduced_mouse.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Summary statistics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Mean</th>\n",
       "      <th>Median</th>\n",
       "      <th>Variance</th>\n",
       "      <th>Standard Deviation</th>\n",
       "      <th>SEM</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Drug Regimen</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>Capomulin</td>\n",
       "      <td>40.675741</td>\n",
       "      <td>41.557809</td>\n",
       "      <td>24.947764</td>\n",
       "      <td>4.994774</td>\n",
       "      <td>0.329346</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Ceftamin</td>\n",
       "      <td>52.591172</td>\n",
       "      <td>51.776157</td>\n",
       "      <td>39.290177</td>\n",
       "      <td>6.268188</td>\n",
       "      <td>0.469821</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Infubinol</td>\n",
       "      <td>52.884795</td>\n",
       "      <td>51.820584</td>\n",
       "      <td>43.128684</td>\n",
       "      <td>6.567243</td>\n",
       "      <td>0.492236</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Ketapril</td>\n",
       "      <td>55.235638</td>\n",
       "      <td>53.698743</td>\n",
       "      <td>68.553577</td>\n",
       "      <td>8.279709</td>\n",
       "      <td>0.603860</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Naftisol</td>\n",
       "      <td>54.331565</td>\n",
       "      <td>52.509285</td>\n",
       "      <td>66.173479</td>\n",
       "      <td>8.134708</td>\n",
       "      <td>0.596466</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Placebo</td>\n",
       "      <td>54.033581</td>\n",
       "      <td>52.288934</td>\n",
       "      <td>61.168083</td>\n",
       "      <td>7.821003</td>\n",
       "      <td>0.581331</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Propriva</td>\n",
       "      <td>52.322552</td>\n",
       "      <td>50.854632</td>\n",
       "      <td>42.351070</td>\n",
       "      <td>6.507770</td>\n",
       "      <td>0.512884</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Ramicane</td>\n",
       "      <td>40.216745</td>\n",
       "      <td>40.673236</td>\n",
       "      <td>23.486704</td>\n",
       "      <td>4.846308</td>\n",
       "      <td>0.320955</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Stelasyn</td>\n",
       "      <td>54.233149</td>\n",
       "      <td>52.431737</td>\n",
       "      <td>59.450562</td>\n",
       "      <td>7.710419</td>\n",
       "      <td>0.573111</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Zoniferol</td>\n",
       "      <td>53.236507</td>\n",
       "      <td>51.818479</td>\n",
       "      <td>48.533355</td>\n",
       "      <td>6.966589</td>\n",
       "      <td>0.516398</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   Mean     Median   Variance  Standard Deviation       SEM\n",
       "Drug Regimen                                                               \n",
       "Capomulin     40.675741  41.557809  24.947764            4.994774  0.329346\n",
       "Ceftamin      52.591172  51.776157  39.290177            6.268188  0.469821\n",
       "Infubinol     52.884795  51.820584  43.128684            6.567243  0.492236\n",
       "Ketapril      55.235638  53.698743  68.553577            8.279709  0.603860\n",
       "Naftisol      54.331565  52.509285  66.173479            8.134708  0.596466\n",
       "Placebo       54.033581  52.288934  61.168083            7.821003  0.581331\n",
       "Propriva      52.322552  50.854632  42.351070            6.507770  0.512884\n",
       "Ramicane      40.216745  40.673236  23.486704            4.846308  0.320955\n",
       "Stelasyn      54.233149  52.431737  59.450562            7.710419  0.573111\n",
       "Zoniferol     53.236507  51.818479  48.533355            6.966589  0.516398"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Generate a summary statistics table of mean, median, variance, standard deviation, and SEM of the tumor volume for each regimen\n",
    "Mean = reduced_mouse.groupby(\"Drug Regimen\").mean()[\"Tumor Volume\"]\n",
    "Median = reduced_mouse.groupby(\"Drug Regimen\").median()[\"Tumor Volume\"]\n",
    "Variance = reduced_mouse.groupby(\"Drug Regimen\").var()[\"Tumor Volume\"]\n",
    "SD = reduced_mouse.groupby(\"Drug Regimen\").std()[\"Tumor Volume\"]\n",
    "SEM = reduced_mouse.groupby(\"Drug Regimen\").sem()[\"Tumor Volume\"]\n",
    "\n",
    "df = pd.DataFrame({\"Mean\":Mean, \"Median\":Median, \"Variance\":Variance, \"Standard Deviation\":SD, \"SEM\":SEM})\n",
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Bar plots"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Generate a bar plot showing number of data points for each treatment regimen using pandas\n",
    "treatments = mouse_study[\"Drug Regimen\"].value_counts()\n",
    "treatments.plot(kind=\"bar\", figsize=(6,6))\n",
    "plt.title(\"Number of Data Points for Each Treatment\")\n",
    "plt.show()\n",
    "plt.tight_layout()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], <a list of 10 Text xticklabel objects>)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Generate a bar plot showing number of data points for each treatment regimen using pyplot\n",
    "mouse_two = mouse_study[\"Drug Regimen\"].value_counts()\n",
    "plt.bar(mouse_two.index.values, mouse_two.values)\n",
    "plt.xticks(rotation=90)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Pie plots"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<function matplotlib.pyplot.show(*args, **kw)>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Generate a pie plot showing the distribution of female versus male mice using pandas\n",
    "mouse_three = mouse_metadata.Sex.value_counts()\n",
    "mouse_three.plot(kind=\"pie\", autopct=\"%1.1f%%\")\n",
    "plt.show"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1a24ae4750>"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Generate a pie plot showing the distribution of female versus male mice using pyplot\n",
    "plt.pie(mouse_three.values,labels=mouse_three.index.values)\n",
    "mouse_three.plot(kind=\"pie\", autopct=\"%1.1f%%\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Quartiles, outliers and boxplots"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Calculate the final tumor volume of each mouse across four of the most promising treatment regimens. Calculate the IQR and quantitatively determine if there are any potential outliers.\n",
    "mouse_four = mouse_study.groupby([\"Mouse ID\"]).max()\n",
    "mouse_four = mouse_four.reset_index()\n",
    "merge_mouse = mouse_four[[\"Mouse ID\", \"Timepoint\"]].merge(mouse_study, on=[\"Mouse ID\", \"Timepoint\"], how=\"left\")\n",
    "\n",
    "Drug_one = merge_mouse.loc[merge_mouse[\"Drug Regimen\"]==\"Capomulin\"][\"Tumor Volume (mm3)\"]\n",
    "Drug_two = merge_mouse.loc[merge_mouse[\"Drug Regimen\"]==\"Ramicane\"][\"Tumor Volume (mm3)\"]\n",
    "Drug_three = merge_mouse.loc[merge_mouse[\"Drug Regimen\"]==\"Infubinol\"][\"Tumor Volume (mm3)\"]\n",
    "Drug_four = merge_mouse.loc[merge_mouse[\"Drug Regimen\"]==\"Ceftamin\"][\"Tumor Volume (mm3)\"]\n",
    "\n",
    "  #  [Capomulin, Ramicane, Infubinol, Ceftamin]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Generate a box plot of the final tumor volume of each mouse across four regimens of interest\n",
    "color = dict(markerfacecolor = \"red\", markersize = 10)\n",
    "plt.boxplot([Drug_one, Drug_two, Drug_three, Drug_four], labels = [\"Capomulin\", \"Ramicane\", \"Infubinol\", \"Ceftamin\"], \n",
    "flierprops = color)\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Line and scatter plots"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Tumor Volume With Capomulin Drug Treatment')"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Generate a line plot of time point versus tumor volume for a mouse treated with Capomulin\n",
    "\n",
    "# Time point vs Tumor Volume \n",
    "\n",
    "# Filter down to Capomulin\n",
    "filter_a = mouse_study[\"Drug Regimen\"]==\"Capomulin\"\n",
    "choice = mouse_study[filter_a]\n",
    "\n",
    "filter_b = choice[\"Mouse ID\"]==\"s185\"\n",
    "choice_b = choice[filter_b]\n",
    "\n",
    "# Define X and Y axis\n",
    "x_axis = choice_b[\"Timepoint\"] \n",
    "mouse_vol = choice_b[\"Tumor Volume (mm3)\"]\n",
    "\n",
    "# Plot line\n",
    "line = plt.plot(x_axis, mouse_vol, marker=\"s\", color = \"green\", alpha= 0.5,)\n",
    "plt.xlabel(\"Treatment Time\")\n",
    "plt.ylabel(\"Tumor Volume\")\n",
    "plt.title(\"Tumor Volume With Capomulin Drug Treatment\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Mouse Weight vs. Average Tumor Volume for the Capomulin regimen')"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Generate a scatter plot of mouse weight versus average tumor volume for the Capomulin regimen\n",
    "# Mouse Weight vs Average Tumor Volume \n",
    "\n",
    "#Get Mouse Weight and Average Tumor Volume \n",
    "mouse_weight = mouse_study[\"Weight (g)\"]\n",
    "avg_tumor = mouse_study[\"Tumor Volume (mm3)\"]\n",
    "\n",
    "# Filter down to Capomulin for Tumor Volume\n",
    "filter_vol = mouse_study[\"Tumor Volume (mm3)\"]==\"Capomulin\"\n",
    "choice_2 = mouse_study[filter_vol]\n",
    "\n",
    "# Define X and Y axis\n",
    "x_axis2 = filter_vol\n",
    "data2 = choice_2\n",
    "\n",
    "# Plot the data\n",
    "plt.scatter(x_axis, data, marker=\"o\", facecolors=\"red\", edgecolors=\"black\", s=x_axis, alpha=0.5)\n",
    "plt.xlabel(\"Mouse Weight\")\n",
    "plt.ylabel(\"Average Tumor Volume\")\n",
    "plt.title(\"Mouse Weight vs. Average Tumor Volume for the Capomulin regimen\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'capomulin_average' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-45-7052561e3c38>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;31m# Calculate the correlation coefficient and linear regression model\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m# for mouse weight and average tumor volume for the Capomulin regimen\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mcorr\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mround\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mst\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpearsonr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcapomulin_average\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Weight (g)'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mcapomulin_average\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Tumor Volume (mm3)'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"The correlation between mouse weight and the average tumor volume is {corr}\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mst\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlinregress\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcapomulin_average\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Weight (g)'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mcapomulin_average\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Tumor Volume (mm3)'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mNameError\u001b[0m: name 'capomulin_average' is not defined"
     ]
    }
   ],
   "source": [
    "# Calculate the correlation coefficient and linear regression model for mouse weight and average tumor volume for the Capomulin regimen\n",
    "# Calculate the correlation coefficient and linear regression model \n",
    "# for mouse weight and average tumor volume for the Capomulin regimen\n",
    "corr=round(st.pearsonr(capomulin_average['Weight (g)'],capomulin_average['Tumor Volume (mm3)'])[0],2)\n",
    "print(f\"The correlation between mouse weight and the average tumor volume is {corr}\")\n",
    "model = st.linregress(capomulin_average['Weight (g)'],capomulin_average['Tumor Volume (mm3)'])\n",
    "y_values = capomulin_average['Weight (g)']*model[0]+model[1]\n",
    "plt.scatter(capomulin_average['Weight (g)'],capomulin_average['Tumor Volume (mm3)'])\n",
    "plt.plot(capomulin_average['Weight (g)'],y_values,color=\"red\")\n",
    "plt.xlabel('Weight (g)')\n",
    "plt.ylabel('Average Tumor Volume (mm3)')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
